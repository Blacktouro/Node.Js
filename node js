const express = require('express');
const bcrypt = require('bcrypt');
const multer = require('multer');
const path = require('path');
const https = require('https');

const app = express();
const port = 3000;

const fs = require('fs');

const options = {
  cert: fs.readFileSync('cert.pem', 'utf8'),
  key: fs.readFileSync('key.pem', 'utf8')
};

// Configuração do Multer para o upload de arquivos
const storage = multer.diskStorage({
  destination: 'uploads/', // Pasta onde os arquivos serão armazenados
  filename: (req, file, cb) => {
    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
    const fileExtension = path.extname(file.originalname);
    cb(null, file.fieldname + '-' + uniqueSuffix + fileExtension);
  }
});

const upload = multer({ storage: storage });

// Configuração do Express.js
app.use(express.urlencoded({ extended: false }));
app.use(express.static(path.join(__dirname, 'public')));

// Rota para a página de login
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'login.html'));
});

// Rota para o processamento do formulário de login
app.post('/login', (req, res) => {
  const { username, password } = req.body;

  // Verificar as informações de login (você deve substituir esta parte com a lógica do seu banco de dados)
  if (username === 'andre' && password === '1234') {
    res.redirect('/dashboard'); // Redirecionar para a página de dashboard após o login bem-sucedido
  } else {
    res.send('Credenciais inválidas. Por favor, tente novamente.');
  }
});

// Rota para a página de dashboard
app.get('/dashboard', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'andre.html'));
});

// Rota para o formulário de upload de arquivos
app.get('/upload', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'upload.html'));
});

// Rota para processar o upload de arquivos
app.post('/upload', upload.single('file'), (req, res) => {
  res.send('Arquivo enviado com sucesso!');
});

const server = https.createServer(options, app);
server.listen(port, () => {
  console.log(`Servidor HTTPS rodando na porta ${port}`);
});

